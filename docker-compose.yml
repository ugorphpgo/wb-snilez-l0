services:
  l0service:
    image: wbl0
    build:
      context: ./
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  db:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts/create_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        - KAFKA_CFG_NODE_ID=1
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CREATE_TOPICS=orders:1:1

    healthcheck:
      test: ["CMD","bash","-c","echo > /dev/tcp/kafka/9092"]
      interval: 5s
      timeout: 5s
      retries: 5

  producer:
    image: kafka-producer
    build:
      context: .
      dockerfile: ./scripts/kafka_producer/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_healthy
volumes:

  db-data: