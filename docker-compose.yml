services:
  backend:
    build:
      context: ./
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  db:
    image: postgres:17.0
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts/create_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEPER_SERVER_ID: 1
      ZOOKEPER_INIT_LIMIT: 2
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/kafka/9092"]
      interval: 10s
      timeout: 5s
      retries: 3

  producer:
    image: kafka-producer
    build:
      context: .
      dockerfile: ./scripts/kafka_producer/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  db-data: